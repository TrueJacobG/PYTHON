
TODO:
import imports from fortest.py
without mypy arrows etc in file support
add diferent types
class tests
test file on import

test edge cases for example if int;int;int give 0 0, 0 1, 1 0, big numbers etc.

so -> random tests HARD:



DONE:
python3.10 testingtool.py file.py

test file types -> str, int, float, bool, List[str, int, float, bool]
expectations file name -> like a file, but with .test

test file example
square;int;int;int
# func name ;arg1 type; arg2 type; result1 type
1:2;2
1:3;3
2:3;6
# arg1:arg2;result1

test if files exist's

option live to see which case passing
-live 
if something wrong then it stops testing
else write good results

YOU CAN'T USE WORD 'def' IN YOUR FILE(in comments or in strings)

in .py.test in strings you can't use ";" and ":", because they are separators

checking if types in .py are equal to .py.test

do mypy before testing

check if inputs in .py.test are correct type

test if .py.test file exist

colors in func for example -> say("Hi!", color="red") <- error etc

everything in class based formula

lists are now compatible

works only with python3.10


COLORS:
red -> error
yellow -> warning, problem with testing_tool
green -> ok
blue -> types are correct




FIXME:later: import -> run testing tool on functions
FIXME:exp. import testingtool
FIXME:testingtool.ad(func1, args=[int, int])